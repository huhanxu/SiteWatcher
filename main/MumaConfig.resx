<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABgAAAAIAAAAEAAAAKAAA
        AGQAAAByAAAAcgAAAGQAAAAoAAAABAAAAAIAAAAGAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAFgAAADwEBARGAAAAFgAA
        AApLS0t2gICA/4CAgP+AgID/gICA/0tLS3YAAAAKAAAAFgQEBEYAAAA8AAAAFgAAAAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAADIZGRl4YWFh1Xd3
        d+cNDQ1aAAAAHFlZWZmDg4P/hISE/4SEhP+Dg4P/WVlZmQAAABwNDQ1adXV152BgYNUYGBh4AAAAMgAA
        AAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQODg40VVVVuX9/
        f/uEhIT/hoaG/2dnZ9EAAABWYmJiu4uLi/+NjY3/jY2N/4uLi/9iYmK7AAAAVmZmZtGGhob/hYWF/35+
        fvtTU1O5CwsLNAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnJy
        cliMjIz/iYmJ/4yMjP+Pj4//jIyM/0VFRclmZmbllJSU/5WVlf+VlZX/lJSU/2ZmZuVFRUXJjIyM/4+P
        j/+NjY3/ioqK/4WFhf9WVlZYAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAA
        ABQAAAAMAQEBHJSUlN+RkZH/lZWV/5eXl/+ZmZn/k5OT/5iYmP+dnZ3/np6e/56env+enp7/mZmZ/5SU
        lP+ampr/mJiY/5WVlf+SkpL/f39/3wAAABwAAAAMAAAAFAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAgKCgpANzc3iwAAAFwAAAA4enp6mZeXl/+dnZ3/oKCg/6Ojo/+kpKT/pqam/6enp/+np6f/p6en/6en
        p/+mpqb/paWl/6Ojo/+hoaH/np6e/5aWlv9eXl6ZAAAAOAAAAFw4ODiLCQkJQAAAAAgAAAAAAAAAAAAA
        AAAAAAACAAAAImBgYLGPj4//e3t770tLS78bGxunnp6e/aampv+pqan/q6ur/66urv+wsLD/trW1/7q6
        uf+6urn/tra1/7GwsP+urq7/rKys/6qqqv+np6f/k5OT/RcXF6dNTU2/fHx874+Pj/9fX1+xAAAAIgAA
        AAIAAAAAAAAAAAAAAAwmJiZgj4+P+ZmZmf+dnZ3/nZ2d/5aWlv2pqan/rq6u/7Kysv+4t7f/ycjH/9TT
        0v/Z2Nf/2dnY/9nZ2P/Z2Nf/1dTS/8nIx/+4uLj/srKy/6+vr/+qqqr/l5eX/Z6env+fn5//mpqa/4+P
        j/kjIyNgAAAADAAAAAAAAAAAAAAAHH19fcOcnJz/oqKi/6enp/+srKz/sLCw/7S0tP+4uLj/xsXE/9bV
        1P/V1NT/1NTU/9TU1P/U1NT/1NTU/9TU1P/U1NT/1dTU/9bV1P/GxsX/ubm5/7W1tf+xsbH/ra2t/6io
        qP+jo6P/nZ2d/3t7e8MAAAAcAAAAAAAAAAAaGhoStbW11aOjo/+pqan/r6+v/7S0tP+4uLj/vLy8/8zL
        yv/U1NP/z8/P/8/Pz//X19f/3d3d/+Dg4P/g4OD/3d3d/9fX1//Pz8//z8/P/9TU0//NzMv/vb29/7m5
        uf+1tbX/sLCw/6urq/+jo6P/oKCg1RYWFhIAAAAAAAAAAAAAAAJHR0cct7e3sbKysv+2trb/vLy8/8HB
        wf/My8r/1NPS/8rKyv/MzMz/2dnZ/9XV1fPBwcGns7OzdrOzs3bBwcGn1dXV89nZ2f/MzMz/ysrK/9TT
        0v/MzMv/wsLC/729vf+4uLj/rq6u/56enrE7OzscAAAAAgAAAAAAAAAGAAAAGgAAACoAAABEenp6s7q6
        uv/ExMT/ycnJ/9jX1v/FxcX/xcXF/9TU1P/CwsLHXl5eKgAAAAYAAAACAAAAAgAAAAZeXl4qwsLCx9TU
        1P/FxcX/xcXF/9jY1v/Kysr/xcXF/7i4uP9oaGizAAAARAAAACoAAAAaAAAABgAAACBKSkqRWlpau29v
        b9GCgoLnw8PD/8vLy//V1dT/zMzL/8DAwP/IyMj/xcXF5zc3NyoAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAI3NzcqxcXF58fHx//AwMD/zMzM/9bW1f/MzMz/xMTE/4ODg+dvb2/RWlpau0pKSpEAAAAgAAAAMru7
        u/+9vb3/wsLC/8jIyP/Nzc3/0tLS/97e3f+9vb3/u7u7/8jIyP+RkZGTAAAACgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAqRkZGTyMjI/7u7u/+9vb3/397d/9PT0//Ozs7/ycnJ/8PDw/++vr7/u7u7/wAA
        ADIAAAA0x8fH/8fHx//Hx8f/yMjI/8rKyv/Nzc3/2dnY/7e3t/+3t7f/wMDA+1RUVGAAAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABFVVVWDAwMD7t7e3/7e3t//Z2dj/zc3N/8rKyv/IyMj/x8fH/8fH
        x//Hx8f/AAAANAAAADLS0tL/2NjY/9/f3//l5eX/7Ozs//Hx8f/g4N//srKy/7Kysv+2trb7NDQ0VgAA
        AAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAENDQ0Vra2tvuysrL/srKy/+Dg3//x8fH/7Ozs/+Xl
        5f/f39//2NjY/9LS0v8AAAAyAQEBIOnp6f/39/f/+fn5//r6+v/6+vr/+vr6/+jn5v+urq7/rq6u/7Gx
        sf1ERERyAAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApERERysbGx/a6urv+urq7/6Ofm//r6
        +v/6+vr/+vr6//n5+f/39/f/6enp/wEBASAAAAAGp6enTrGxsXS2trafsbGx0/Dw8P/39/f/8fHw/62s
        rP+qqqr/rq6u/2pqaq8AAAAgAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAACAAAAIGtra6+tra3/qqqq/62s
        rP/x8fD/9/f3//Dw8P+ysrLTtra2n7GxsXSnp6dOAAAABgAAAAAAAAACAAAAFgAAAE5RUVG94ODg//Pz
        8//z8/L/vr6+/6ampv+mpqb/mZmZ8R0dHWgAAAAaAAAABgAAAAIAAAACAAAABAAAABgdHR1mmZmZ8aam
        pv+mpqb/vr6+//Pz8v/z8/P/4eHh/1BQUL0AAABOAAAAFgAAAAIAAAAAAAAAAAAAABANDQ1ceHh41dfX
        1//u7u7/7+/v/+/v7//i4uH/oqKi/6Kiov+ioqL/g4OD4RkZGXwCAgJCAAAAKgAAACoCAgJAGhoafISE
        hOGioqL/oqKi/6Kiov/i4uH/7+/v/+/v7//u7u7/1tbW/3Z2dtUNDQ1cAAAAEAAAAAAAAAAACgoKHp6e
        nuHg4OD/6+vr/+vr6//r6+v/6+vr/+7u7f/FxcX/np6e/56env+enp7/lZWV+WlpadVOTk67Tk5OuWpq
        atWVlZX5np6e/56env+enp7/xcXF/+7u7f/r6+v/6+vr/+vr6//r6+v/4ODg/52dneEKCgoeAAAAAAAA
        AAAAAAAMubm5seXl5f/m5ub/5ubm/+bm5v/m5ub/5ubm/+zs7P+7u7v/mpqa/5qamv+ampr/mpqa/5qa
        mv+ampr/mpqa/5qamv+ampr/mpqa/7u7u//s7Oz/5ubm/+bm5v/m5ub/5ubm/+bm5v/l5eX/urq6sQAA
        AAwAAAAAAAAAAAAAAAJZWVky1dXV9eHh4f/g4OD/2NjY/83Nzf3f39//4eHh/+np6f/Ozs7/np6e/5aW
        lv+Wlpb/lpaW/5aWlv+Wlpb/lpaW/56env/Ozs7/6enp/+Hh4f/f39//1NTU/dra2v/g4OD/4eHh/9bW
        1vVdXV0yAAAAAgAAAAAAAAAAAAAAAAAAAAirq6uLzs7O/7u7u9mYmJiBKioqdMLCwv3d3d3/3d3d/+Dg
        4P/n5+f/0dHR/7q6uv+urq7/rq6u/7q6uv/R0dH/6Ojo/+Dg4P/d3d3/3d3d/7+/v/0sLCxys7Ozgc3N
        zdnV1dX/sLCwiwAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAD09PQ6Xl5dCAgICDAAAABxnZ2en0NDQ/9nZ
        2f/Z2dn/2dnZ/9nZ2f/a2tr/39/f/+Li4v/i4uL/39/f/9ra2v/Z2dn/2dnZ/9nZ2f/Z2dn/0NDQ/1xc
        XKcAAAAcAwMDDLi4uEJHR0cOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAANKam
        punU1NT/1NTU/9TU1P/U1NT/zc3N/dHR0f/U1NT/1NTU/9TU1P/U1NT/0dHR/83Nzf3U1NT/1NTU/9TU
        1P/U1NT/mZmZ6QAAADQAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AARwcHBYxcXF/9DQ0P/Q0ND/0NDQ/8vLy/+Li4uTr6+vzc/Pz//Q0ND/0NDQ/8/Pz/+vr6/Ng4ODk8jI
        yP/Q0ND/0NDQ/9DQ0P+/v7//WFhYWAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADg4OBCtra2FxsbG88zMzP/Jycn/tra2sQAAABypqamrysrK/8zMzP/MzMz/ysrK/6mp
        qasAAAAcpqamscjIyP/MzMz/xcXF86mpqYUwMDAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARycnIot7e3qcbGxtNDQ0McAAAACp+fn4vFxcX/x8fH/8fH
        x//FxcX/n5+fiwAAAAo5OTkctLS007S0tKlsbGwoAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEPT09CAAAAAIAAAAEoqKiWMPD
        w//BwcH/wcHB/8PDw/+ioqJYAAAABAAAAAIyMjIIAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAEAAAADAAAAA4AAAAOAAAADAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////8P///mBn//ggQf/4AAH/+AAB/9gAAb+AAAAfgAAAHwAAAA8AA
        AAPgAYAH8AfgD4AP8AGAD/ABgB/4AYAf+AGAH/gB4A/wB/AP8A/gB+AHwAAAA8AAAAPgAAAH4QAAh/4A
        AH/+AAB//gAAf/4IEH//mBn///w///////8=
</value>
  </data>
</root>